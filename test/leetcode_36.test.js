const isValidSudoku = require( '../src/leetcode_36' );

describe( 'Test cases for leetcode_36', () => {

    // true 
    it( 'True Result: use case 1', () => {
        const board = [
            [ "5", "3", ".", ".", "7", ".", ".", ".", "." ],
            [ "6", ".", ".", "1", "9", "5", ".", ".", "." ],
            [ ".", "9", "8", ".", ".", ".", ".", "6", "." ],
            [ "8", ".", ".", ".", "6", ".", ".", ".", "3" ],
            [ "4", ".", ".", "8", ".", "3", ".", ".", "1" ],
            [ "7", ".", ".", ".", "2", ".", ".", ".", "6" ],
            [ ".", "6", ".", ".", ".", ".", "2", "8", "." ],
            [ ".", ".", ".", "4", "1", "9", ".", ".", "5" ],
            [ ".", ".", ".", ".", "8", ".", ".", "7", "9" ]
        ];

        expect( isValidSudoku( board ) ).toEqual( true );
    } );

    it( 'True Result: empty board', () => {
        const board = [
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
        ];

        expect( isValidSudoku( board ) ).toEqual( true );
    } );

    // false 
    it( 'False Result: same number in on row', () => {
        const board = [
            [ ".", "1", ".", ".", ".", "1", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
        ];

        expect( isValidSudoku( board ) ).toEqual( false );
    } );

    it( 'False Result: same number in on column', () => {
        const board = [
            [ ".", ".", ".", ".", ".", "1", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", "1", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
        ];

        expect( isValidSudoku( board ) ).toEqual( false );
    } );

    it( 'False Result: same number in on column', () => {
        const board = [
            [ "1", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", "1", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
            [ ".", ".", ".", ".", ".", ".", ".", ".", "." ],
        ];

        expect( isValidSudoku( board ) ).toEqual( false );
    } );

    it( 'Negative Test Case 1', () => {
        const board = [
            [ "8", "3", ".", ".", "7", ".", ".", ".", "." ],
            [ "6", ".", ".", "1", "9", "5", ".", ".", "." ],
            [ ".", "9", "8", ".", ".", ".", ".", "6", "." ],
            [ "8", ".", ".", ".", "6", ".", ".", ".", "3" ],
            [ "4", ".", ".", "8", ".", "3", ".", ".", "1" ],
            [ "7", ".", ".", ".", "2", ".", ".", ".", "6" ],
            [ ".", "6", ".", ".", ".", ".", "2", "8", "." ],
            [ ".", ".", ".", "4", "1", "9", ".", ".", "5" ],
            [ ".", ".", ".", ".", "8", ".", ".", "7", "9" ]
        ];

        expect( isValidSudoku( board ) ).toEqual( false );
    } );
} );
